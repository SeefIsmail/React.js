{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setSatate","Component","App","onSearchChange","event","setState","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACE,6BAAKF,IACL,4BAAIC,WCaGK,EAlBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACnB,OACA,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACnB,OACA,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCOOC,EAfC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACD,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,qCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCKI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCwBEC,E,kDAzBd,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAO,CACXC,UAAS,GAHM,E,qDAOnB,SAAmBC,EAAMC,GACxBC,KAAKC,UAAU,CAACJ,UAAS,M,oBAG1B,WAEC,OAAGG,KAAKJ,MAAMC,SACN,sEAGDG,KAAKX,MAAMK,a,GAnBQQ,aC+CZC,G,wDAvCd,aAAc,IAAD,8BACb,gBAaDC,eAAgB,SAACC,GACf,EAAKC,SAAS,CAAEvB,YAAasB,EAAME,OAAOC,SAb3C,EAAKZ,MAAM,CAEVlB,OAAO,GACPK,YAAY,IALA,E,qDAQb,WAAqB,IAAD,OACjB0B,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKP,SAAS,CAAE5B,OAAQmC,S,oBAM9C,WAAS,IAAD,EAEwBb,KAAKJ,MAA7BlB,EAFA,EAEAA,OAAQK,EAFR,EAEQA,YACV+B,EAAgBpC,EAAOqC,QAAO,SAAAC,GAC9B,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASnC,EAAYkC,kBAE1D,OAAQvC,EAAOyC,OAGd,sBAAK7C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAE5B,cAAC,EAAD,UACA,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAQoC,WARjB,6C,GA1BYZ,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f21894fc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\t\r\nreturn(\r\n<div>\r\n    {\r\n    robots.map((user,i) => {\r\n\t\treturn(\r\n\t\t<Card \r\n\t\t key={i} \r\n\t\t id={robots[i].id} \r\n\t\t name={robots[i].name} \r\n\t\t email={robots[i].email}\r\n\t\t />\r\n\t\t);\r\n\t})\r\n}\r\n</div>\r\n   );\r\n}\r\nexport default CardList;\r\n\r\n\r\n  \r\n","import React from 'react';\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n return(\r\n<div className='pa2'>\r\n<input \r\nclassName='pa3 ba b--green bg-lighttest-blue '\r\ntype='search' \r\nplaceholder='search robots'\r\nonChange={searchChange}\r\n/>\r\n</div>\r\n\r\n \t);\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '0px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React ,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n constructor(props){\r\n   super(props);\r\n   this.state= {\r\n   \thasError:false\r\n   }\r\n }\r\n\r\ncomponentDidCatch (error,info){\r\n\tthis.setSatate({hasError:true})\r\n}\r\n\r\nrender(){\r\n\r\n\tif(this.state.hasError){\r\n\t\treturn <h1> There is a problem we are sorry :( </h1>\r\n\t}\r\n\r\n\treturn this.props.children ;\r\n\r\n\r\n\r\n}\r\n\r\n\r\n}\r\nexport default ErrorBoundry;","import React,{Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n\r\n\tconstructor(){\r\n\tsuper();\r\n\tthis.state={\r\n\r\n\t\trobots:[],\r\n\t\tsearchfield:''\r\n\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users => {this.setState({ robots: users})});\r\n  }\r\n\r\nonSearchChange =(event)=>{\r\n\t this.setState({ searchfield: event.target.value })\r\n\t}\r\nrender(){\r\n\r\nconst { robots, searchfield } = this.state;\r\nconst filteredRobots =robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n return !robots.length ?\r\n      <h1>Loading</h1> :\r\n (\r\n \t<div className='tc'>\r\n \t<h1 className='f1'>Robo Friends</h1>\r\n \t<SearchBox searchChange={this.onSearchChange}/>\r\n\r\n \t  <Scroll>\r\n \t  <ErrorBoundry>\r\n     <CardList robots={filteredRobots}/>\r\n     </ErrorBoundry>\r\n      </Scroll>\r\n    </div> );\r\n}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}